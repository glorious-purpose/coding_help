"""
Redditor posted asking someone to solve the protein contact map problem at
https://dodona.ugent.be/en/activities/1745899459/#

I broke down the problem into simple steps (The problem as stated on the site
can look confusing/intimidating) and laid out how I would approach it.
https://www.reddit.com/r/pythonhomework/comments/x2p6gv/this_might_be_my_exam_question_tomorrow_can/

Now, curious, I want to try to solve it. The pdb file generated by the site
shows a lot more atoms than I expected, so running this might take a while.
"""
import math
from typing import List, Mapping


def distance_xyz(coords_a: List[float], coords_b: List[float]) -> float:
    """Return distance between two coordinates in 3D space."""
    # afstand_xyz
    x_A, y_A, z_A = coords_a
    x_B, y_B, z_B = coords_b
    return round(math.sqrt((x_A - x_B) ** 2 + (y_A - y_B) ** 2 + (z_A - z_B) ** 2), 3)


def distance_aa(amino_acid_A: str, amino_acid_B: str, coord_dict: Mapping[str, List[float]]) -> float:
    """Extract coordinates from dict using given keys. Return distance between coordinates."""
    # afstand_aa
    return distance_xyz(coord_dict[amino_acid_A], coord_dict[amino_acid_B])


def contact_map(ca_dict: Mapping[str, List[float]]) -> List[List]:
    """Take dict of CA atoms, compare distances, return contact map."""
    # contact_map
    ca_keys = sorted(ca_dict, reverse=True, key=lambda a: float(a) * len(a))
    contacts = []
    for key_1 in keys:
        for key_2 in ca_keys:
            contacts.append([key_1, key_2, int(distance_aa(key_1, key_2, ca_dict) < 12)])

    return contacts


def read_protein_structure(file: str, encoding: str = "utf-8") -> List[List]:
    """Read input file and get atom details for amino acids."""
    # lees_eiwit_structuur
    atoms = []
    try:
        with open(file, encoding=encoding) as ifile:
            for line in ifile.readlines():
                if line[:4].upper() == "ATOM":
                    # It is a line we want to parse. Let's read data from it.
                    details = line.split()

                    # The data is poorly formatted. We need to make sure we are
                    # getting the values we want. Occasionally, the amino acid
                    # chain and amino acid number merge. If the chain column
                    # ends with a number, I'll assume this has occurred.
                    # This could possibly cuase an error if chain designations
                    # might contain numbers in other reports.
                    if details[4][-1].isdigit():
                        aa_chain = ""
                        aa_num = ""
                        for char in details[4]:
                            if char.isalpha():
                                aa_chain += char
                            else:
                                aa_num += char
                        details[4] = aa_chain
                        details.insert(5, aa_num)

                    atoms.append([str(details[2]), str(details[3]), str(details[5]), float(details[6]), float(details[7]), float(details[8])])
    except FileNotFoundError:
        print("File not found.")
    return atoms


def ca_coordinates(details: List[List]) -> Mapping[str, List[float]]:
    """Take list of amino acid data, record CA atom coordinates."""
    # ca_coordinaten
    coord_map = {}
    for entry in details:
        if entry[0] != "CA":
            continue
        aan = entry[2]
        coordinates = entry[3:]
        if len(coordinates) != 3:
            raise ValueError(f"Entry {entry} lacking coordinates.")
        coord_map[aan] = coordinates
    return coord_map


def main(file: str) -> List[List]:
    structure = read_protein_structure(file)
    if len(structure) == 0:
        print("No information available for processing. Aborting...")
        return
    ca_dict = ca_coordinates(structure)
    for contact in contact_map(ca_dict):
        print(contact)


if __name__ == "__main__":
    INPUT_FILE = "test/6gh6.pdb"
    INPUT_FILE_URL = "https://sandbox.dodona.be/en/activities/1745899459/description/BxygDEwCG5hVc4-M/media/6gh6.pdb"
    main(INPUT_FILE_URL)
